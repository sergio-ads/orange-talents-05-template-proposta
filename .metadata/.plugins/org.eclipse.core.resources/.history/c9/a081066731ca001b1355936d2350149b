package br.com.zupacademy.proposta.controller;

import java.net.URI;

import javax.transaction.Transactional;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;
import org.springframework.web.util.UriComponentsBuilder;

import br.com.zupacademy.proposta.model.Biometria;
import br.com.zupacademy.proposta.model.Cartao;
import br.com.zupacademy.proposta.model.dto.BiometriaDto;
import br.com.zupacademy.proposta.model.request.BiometriaRequest;
import br.com.zupacademy.proposta.repository.BiometriaRepository;
import br.com.zupacademy.proposta.repository.CartaoRepository;

@RestController
@RequestMapping(value = "/biometria")
public class BiometriaController {
    @Autowired
    private BiometriaRepository biometriaRepository;
    @Autowired
    private CartaoRepository cartaoRepository;

    @GetMapping("/{idBiometria}")
    public BiometriaDto get(@PathVariable String idBiometria) {
        Biometria biometria = biometriaRepository.findById(idBiometria)
                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND ,"Biometria n達o encontrada"));
        return new BiometriaDto(biometria);
    }

    @Transactional
    @PostMapping
    public ResponseEntity<?> save(@RequestBody @Valid BiometriaRequest biometriaRequest, UriComponentsBuilder uriBuilder) {
    	Cartao cartao = cartaoRepository.findById(biometriaRequest.getIdCartao())
    			.orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND ,"Cart達o n達o encontrado"));

        Biometria biometria = biometriaRequest.toModel();
        cartao.adicionaBiometria(biometria, cartaoRepository, biometriaRepository);
        
        URI uri = uriBuilder.path("/biometria/{idBiometria}").buildAndExpand(biometria.getId()).toUri();
        return ResponseEntity.created(uri).build();
    }

    @Transactional
    @DeleteMapping("/{idBiometria}")
    public void delete(@PathVariable String idBiometria) {
    	Assert.state(biometriaRepository.findById(idBiometria).isPresent(), "Biometria n達o localizada");
        biometriaRepository.deleteById(idBiometria);
    }

}
